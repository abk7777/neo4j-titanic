enum Role {
  user
  admin
}

type User {
  userId: String!
  userHandle: String!
  userFirstName: String
  userLastName: String
  userFullName: String
  userBio: String
  userProfile_BG: String
  userProfile_FG: String
  userEmail: String
  userPassword: String
  userGender: String
  userSiteName: String
  userWebsite: String
  userRating: Float
  userCreativeField: [String]
  userSkills: [String]
  userClients: [String]
  userCity: String
  userCountry: String
  userRateAmount: Float
  userRatePeriod: String
  userAvailability: String
  userAvailableDays: String
  reactionNotifications: Boolean
  userPhone: String
  userCompany: String
  vFeed(first: Int = 3, offset: Int = 0): [Project] @cypher(statement: "MATCH (p:Project) RETURN p")
  userFollows(first: Int = 3, offset: Int = 0): [User] @relation(name: "FOLLOWS", direction: OUT)
  userFollowers(first: Int = 3, offset: Int = 0): [User] @relation(name: "FOLLOWS", direction: IN)
  userProjects(first: Int = 3, offset: Int = 0): [Project] @relation(name: "CREATED", direction: OUT)
  userCollaborations(first: Int = 3, offset: Int = 0): [Project] @relation(name: "COLLABORATED_ON", direction: OUT)
  userCreativeInterestTags(first: Int = 3, offset: Int = 0): [Tag] @relation(name: "FOLLOWS", direction: OUT)
  userImages(first: Int = 3, offset: Int = 0): [Image] @relation(name: "CREATED", direction: OUT)
  userIsTagged(first: Int = 3, offset: Int = 0): [Image] @relation(name: "IS_TAGGED_IN", direction: OUT)
}

type Project @isAuthenticated {
  projectUUID: String
  projectId: ID!
  projectName: String
  projectDescription: String
  projectCreator(first: Int = 3, offset: Int = 0): [User] @relation(name: "CREATED", direction: IN)
  projectCreatedDate: Date
  projectCreativeInterestTags: String
  projectTags(first: Int = 3, offset: Int = 0): [Tag] @relation(name: "IS_TAGGED", direction: OUT)
  projectCollaborators(first: Int = 3, offset: Int = 0): [User] @relation(name: "COLLABORATED_ON", direction: IN)
  projectFollowers(first: Int = 3, offset: Int = 0): [User] @relation(name: "FOLLOWS", direction: IN)
  projectImages(first: Int = 3, offset: Int = 0): [Image] @relation(name: "FROM", direction: IN)
}
  
type Image {
  imageUUID: String
  imageId: ID!
  imageCreator(first: Int = 3, offset: Int = 0): [User] @relation(name: "CREATED", direction: IN)
  imageCaption: String
  imageDescription: String
  imageCreatedDate: Date
  imageURL: String
  imageProjects(first: Int = 3, offset: Int = 0): [Project] @relation(name:"FROM", direction: OUT)
  imageTags(first: Int = 3, offset: Int = 0): [Tag] @relation(name:"IS_TAGGED", direction: OUT)
  imageTaggedUsers(first: Int = 3, offset: Int = 0): [User] @relation(name:"IS_TAGGED_IN", direction:IN)
}

type Tag {
  tagId: String
  tagName: String
  tagCreatedBy: String
  tagCreatedDate: Date
  hFeed(first: Int = 3, offset: Int = 0): [Project] @relation(name:"IS_TAGGED", direction:IN)
  tagFollowers(first: Int = 3, offset: Int = 0): [User] @relation(name:"FOLLOWS", direction:IN)
  tagProjects(first: Int = 3, offset: Int = 0): [Project] @relation(name:"IS_TAGGED", direction:IN)
  tagImages(first: Int = 3, offset: Int = 0): [Image] @relation(name:"IS_TAGGED", direction:IN)
}
